import { error, json } from '@sveltejs/kit';
import type { RequestHandler } from './$types';

export const POST: RequestHandler = async ({ url, request }) => {
	const action: string | null = url.searchParams.get('action');
	const request_body = await request.json();

	// ADD AUTH FOR EACH SESSION ACTION EXCEPT THE CREATE
	// WHEN EXPLODING A SESSION NOTIFY ALL USERS

	//
	// ADD ADMIN LOG OUT LOG IN DELAY BEFORE EXPLODING THE SESSION -> TO BE TESTED....
	// ADD COMMUNICATION LOGIC IN THE CLIENT SIDE SO THAT VIEWERS CLIENTS UNDERSTAND THE UPDATES SENT TO THEM -> TO BE TESTED
	//
	// IMPLEMENT ELEMENT MOVED EVENT ON CLIENT SIDE -> TO BE TESTED
	//
	// START NEW PROJECT WHICHS SCALABLE USING MEMCACH AND KAFKA AND REDIS WHICH'S A SHOP THAT ALLOWS USERS TO LIST DIGITAL ITEMS FOR SALE
	// UPLOAD THE IMAGES EDITOR EXTENSION YOU MADE TO GITHUB WITH SNIPPETS AND DOCUMENTATION
	// UPLOAD THE INSTAGRAM AND SOCIAL MEDIA TIME LIMITER EXTENSION TO GITHUB WITH SNIPPETS AND DOCUMENTATION
	// TRY TO PUBLISH THIS PROJ ON THE WEB AND TEST ALL REQUIRED AND LISTED TESTS U JUST LISTED
	//
	// TEST ELEMENT ADDING, MOVING AND REMOVING ACROSS SESSIONS
	// ADD A WAY TO SAVE THE main ELEMENT'S HTML AND THEIR PLACES ON A SESSION SO THAT WHEN NEW VIEWERS JOIN THEY SEE THE SAME THING
	// TEST EVERYTHING ELSE
	//
	//

	// REMOVE ALL LOGS WHEN TESTING IS DONE
	// ADD TEMPORARY PER-SESSION GUEST AUTH SYSTEM AND CONNECT TO REDIS SO STORE INDIVIDUAL SESSIONS AND SESSION DATA

	if (action == null) {
		return error(400, 'Bad request!');
	}

	return new Response('');
};
